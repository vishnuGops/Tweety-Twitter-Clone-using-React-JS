{"version":3,"sources":["SidebarOption.js","Sidebar.js","firebase.js","Post.js","TweetBox.js","Feed.js","Widgets.js","App.js","reportWebVitals.js","index.js"],"names":["SidebarOption","active","text","Icon","className","Sidebar","HomeIcon","SearchIcon","NotificationsNoneIcon","MailOutlineIcon","BookmarkBorderIcon","ListAltIcon","PermIdentityIcon","MoreHorizIcon","Button","variant","fullWidth","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","Post","forwardRef","ref","displayName","username","verified","image","avatar","Avatar","src","alt","fontSize","TweetBox","useState","tweetMessage","setTweetMessage","tweetImage","setTweetImage","onChange","e","target","value","placeholder","type","onClick","preventDefault","collection","add","Feed","posts","setPosts","useEffect","onSnapshot","snapshot","docs","map","doc","data","post","Widgets","tweetId","options","height","sourceType","screenName","url","via","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4b1a5b12.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nimport './SidebarOption.css'\r\nfunction SidebarOption({active, text, Icon }) {\r\n    return (\r\n        <div className={`sidebarOption ${active && \"sidebarOption--active\"}`}>\r\n             <Icon />\r\n            <h2>{text}</h2>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SidebarOption\r\n","\r\nimport React from \"react\";\r\nimport \"./Sidebar.css\";\r\nimport TwitterIcon from \"@material-ui/icons/Twitter\";\r\nimport SidebarOption from \"./SidebarOption\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport NotificationsNoneIcon from \"@material-ui/icons/NotificationsNone\";\r\nimport MailOutlineIcon from \"@material-ui/icons/MailOutline\";\r\nimport BookmarkBorderIcon from \"@material-ui/icons/BookmarkBorder\";\r\nimport ListAltIcon from \"@material-ui/icons/ListAlt\";\r\nimport PermIdentityIcon from \"@material-ui/icons/PermIdentity\";\r\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\n\r\nfunction Sidebar() {\r\n    return (\r\n        <div className = \"sidebar\">\r\n            {/* twitter icon */}\r\n            <div className = \"sidebar__twitterLogo\" >\r\n                <TwitterIcon className=\"sidebar__twitterIcon\"/>\r\n                <h2>Tweeety</h2>\r\n            </div>\r\n            <div className = \"sidebar__menus\">\r\n                {/* Sidebar buttons */}\r\n                <SidebarOption active Icon={HomeIcon} text=\"Home\" />\r\n                <SidebarOption Icon={SearchIcon} text=\"Explore\" />\r\n                <SidebarOption Icon={NotificationsNoneIcon} text=\"Notifications\" />\r\n                <SidebarOption Icon={MailOutlineIcon} text=\"Messages\" />\r\n                <SidebarOption Icon={BookmarkBorderIcon} text=\"Bookmarks\" />\r\n                <SidebarOption Icon={ListAltIcon} text=\"Lists\" />\r\n                <SidebarOption Icon={PermIdentityIcon} text=\"Profile\" />\r\n                <SidebarOption Icon={MoreHorizIcon} text=\"More\" />\r\n\r\n                \r\n                {/* Tweet button -> Tweet */}\r\n                <Button variant = \"outlined\" className=\"sidebar__tweet\" fullWidth>Tweet</Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n","import firebase from \"firebase\";\r\n\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyC37kRDcoVWvILKrd4e0DzTjk4Jpkj6vsM\",\r\n    authDomain: \"twitter-clone-22d40.firebaseapp.com\",\r\n    projectId: \"twitter-clone-22d40\",\r\n    storageBucket: \"twitter-clone-22d40.appspot.com\",\r\n    messagingSenderId: \"220960122464\",\r\n    appId: \"1:220960122464:web:281052ce226158ff294505\",\r\n    measurementId: \"G-RW6TPX25HV\"\r\n  };\r\n\r\n  const firebaseApp = firebase.initializeApp(firebaseConfig);\r\n\r\n  const db = firebaseApp.firestore();\r\n\r\nexport default db;","import React, { forwardRef } from \"react\";\r\nimport \"./Post.css\";\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport VerifiedUserIcon from \"@material-ui/icons/VerifiedUser\";\r\nimport ChatBubbleOutlineIcon from \"@material-ui/icons/ChatBubbleOutline\";\r\nimport RepeatIcon from \"@material-ui/icons/Repeat\";\r\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\r\nimport PublishIcon from \"@material-ui/icons/Publish\";\r\n\r\nconst Post = forwardRef(\r\n  ({ displayName, username, verified, text, image, avatar }, ref) => {\r\n    return (\r\n      <div className=\"post\" ref={ref}>\r\n        <div className=\"post__avatar\">\r\n          <Avatar src={avatar} />\r\n        </div>\r\n        <div className=\"post__body\">\r\n          <div className=\"post__header\">\r\n            <div className=\"post__headerText\">\r\n              <h3>\r\n                {displayName}{\" \"}\r\n                <span className=\"post__headerSpecial\">\r\n                  {verified && <VerifiedUserIcon className=\"post__badge\" />} @\r\n                  {username}\r\n                </span>\r\n              </h3>\r\n            </div>\r\n            <div className=\"post__headerDescription\">\r\n              <p>{text}</p>\r\n            </div>\r\n          </div>\r\n          <img src={image} alt=\"\" />\r\n          <div className=\"post__footer\">\r\n            <ChatBubbleOutlineIcon fontSize=\"small\" />\r\n            <RepeatIcon fontSize=\"small\" />\r\n            <FavoriteBorderIcon fontSize=\"small\" />\r\n            <PublishIcon fontSize=\"small\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nexport default Post;","  \r\nimport React, { useState } from \"react\";\r\nimport \"./TweetBox.css\";\r\nimport { Avatar, Button } from \"@material-ui/core\";\r\nimport db from \"./firebase\";\r\n\r\nfunction TweetBox() {\r\n  const [tweetMessage, setTweetMessage] = useState(\"\");\r\n  const [tweetImage, setTweetImage] = useState(\"\");\r\n\r\n  const sendTweet = (e) => {\r\n    e.preventDefault();\r\n\r\n    db.collection(\"posts\").add({\r\n      displayName: \"Vishnu Gopal\",\r\n      username: \"VishnuGops\",\r\n      verified: true,\r\n      text: tweetMessage,\r\n      image: tweetImage,\r\n      avatar:\r\n        \"https://kajabi-storefronts-production.global.ssl.fastly.net/kajabi-storefronts-production/themes/284832/settings_images/rLlCifhXRJiT0RoN2FjK_Logo_roundbackground_black.png\",\r\n    });\r\n\r\n    setTweetMessage(\"\");\r\n    setTweetImage(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"tweetBox\">\r\n      <form>\r\n        <div className=\"tweetBox__input\">\r\n          <Avatar src=\"https://kajabi-storefronts-production.global.ssl.fastly.net/kajabi-storefronts-production/themes/284832/settings_images/rLlCifhXRJiT0RoN2FjK_Logo_roundbackground_black.png\" />\r\n          <input\r\n            onChange={(e) => setTweetMessage(e.target.value)}\r\n            value={tweetMessage}\r\n            placeholder=\"   What's happening?\"\r\n            type=\"text\"\r\n            \r\n          />\r\n        </div>\r\n        <input\r\n          value={tweetImage}\r\n          onChange={(e) => setTweetImage(e.target.value)}\r\n          className=\"tweetBox__imageInput\"\r\n          placeholder=\"Optional: Enter image URL\"\r\n          type=\"text\"\r\n        />\r\n\r\n        <Button\r\n          onClick={sendTweet}\r\n          type=\"submit\"\r\n          className=\"tweetBox__tweetButton\"\r\n        >\r\n          Tweet\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TweetBox;","import React, { useEffect, useState } from 'react';\r\nimport './Feed.css';\r\nimport db from './firebase';\r\nimport Post from './Post';\r\nimport TweetBox from './TweetBox';\r\nimport FlipMove from \"react-flip-move\";\r\nfunction Feed() {\r\n    const [posts, setPosts] = useState([]);\r\n\r\n    useEffect(() => {\r\n        db.collection('posts').onSnapshot(snapshot => (\r\n            setPosts(snapshot.docs.map(doc => doc.data()))\r\n        ))\r\n    }, []);\r\n\r\n    return (\r\n        <div className = \"feed\">\r\n            {/* Header */}\r\n            <div className = \"feed__header\">\r\n                <h2>Home</h2>\r\n                \r\n            </div>\r\n            \r\n            {/* Tweet box */}\r\n            <TweetBox />\r\n\r\n            {/* Posts  */}\r\n            <FlipMove>\r\n            {posts.map(post =>(\r\n                <Post \r\n                key={post.text}\r\n                displayName= {post.displayName}\r\n                username ={post.username}\r\n                verified = {post.verified}\r\n                text = {post.text}\r\n                avatar = {post.avatar}\r\n                image = {post.image}\r\n                />\r\n            \r\n\r\n        ))}\r\n        </FlipMove>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Feed\r\n","import React from 'react'\r\nimport './Widgets.css'\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport {\r\n    TwitterTimelineEmbed,\r\n    TwitterShareButton,\r\n    TwitterTweetEmbed,\r\n  } from \"react-twitter-embed\";\r\n\r\nfunction Widgets() {\r\n    return (\r\n        <div className=\"widgets\">\r\n            <div className = \"widgets__input\">\r\n                <SearchIcon className =\"widgets__searchIcon\" />\r\n                <input placeholder=\"Search Twitter\" type =\"text\" />\r\n            </div>\r\n\r\n            <div className=\"widgets__widgetContainer\">\r\n                <h2>What's happening?</h2>\r\n                <TwitterTweetEmbed \r\n                    tweetId ={\"1384358934027374593\"}\r\n                    options={{height: 250}}\r\n\r\n                />\r\n\r\n                <TwitterTimelineEmbed\r\n                    sourceType=\"profile\"\r\n                    screenName=\"NASA\"\r\n                    options={{ height: 150 }}\r\n                />\r\n                <TwitterShareButton\r\n                    url={\"https://facebook.com/cleverprogrammer\"}\r\n                    options={{ text: \"#reactjs is awesome\", via: \"cleverqazi\" }}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Widgets\r\n","import React from \"react\";\nimport Sidebar from \"./Sidebar\";\nimport './App.css';\nimport Feed from \"./Feed\";\nimport Widgets from \"./Widgets\";\n\nfunction App() {\n  return (\n    //BEM\n    <div className=\"App\">\n\n      {/* Sidebar */}\n      <Sidebar />\n      {/* Feed */}\n      <Feed />\n      {/* Widgets */}\n      <Widgets />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}